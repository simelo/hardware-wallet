language: c
matrix:
  include:
    - os: linux
      env:
        - PIP='sudo pip'
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
    - os: osx

before_script:

  - eval "CC=gcc-6 && CXX=g++-6"
  - sh "./tiny-firmware/protob/ci-scripts/install-${TRAVIS_OS_NAME}.sh" ;
  # Define env vars for Linux builds
  - if [[ $TRAVIS_OS_NAME == 'linux' ]]; then
    ls -l /usr/local/bin/protoc ;
    export PATH="/usr/local/bin:$(pwd)/protoc/bin:$PATH" ;
    echo "PATH=$PATH";
    echo "PIP=$PIP";
    fi
  # Install OS-specific test and build dependencies
  - eval "./ci-scripts/install-${TRAVIS_OS_NAME}.sh"
  # Install linters
  - make install-linters

script:
  - make check-protob
  - make lint
  - make -C tiny-firmware/protob build-c
  - make test
  - make clean
  - make emulator
  - make clean
  - make bootloader-mem-protect
  - make bootloader-clean
  - make full-firmware
  - make clean

notifications:
  # https://github.com/kvld/travisci-telegram TravisCI Telegram Bot integration
  email: false
  webhooks: https://fathomless-fjord-24024.herokuapp.com/notify

before_deploy:
  - if [[ $TRAVIS_OS_NAME == 'linux' ]]; then
      make release;
      VERSION_BOOTLOADER=$(cat tiny-firmware/bootloader/VERSION);
      ID_VENDOR=12602;
      ID_PRODUCT=1;
      export COMBINED_VERSION=${VERSION_BOOTLOADER}-${TRAVIS_TAG}-${ID_VENDOR}-${ID_PRODUCT}-1;
    else
      make release-emulator;
    fi

deploy:
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY_ID
    secret_access_key: $AWS_SECRET_ACCESS_KEY
    bucket: $AWS_BUCKET
    skip_cleanup: true
    local_dir: releases
    upload-dir: skywallet
    acl: private
    region: $AWS_REGION
    on:
      repo: skycoin/hardware-wallet
      tags: true
